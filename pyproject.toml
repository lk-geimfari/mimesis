[project]
name = "mimesis"
version = "18.0.0"
description = "Mimesis: Fake Data Generator."
authors = [{ name = "Isaak Uchakaev", email = "hey@isaak.dev" }]
requires-python = "~=3.10"
readme = "README.md"
license = "MIT"
keywords = [
    "data",
    "datascince",
    "database",
    "dummy",
    "fake",
    "faker",
    "fixtures",
    "generate",
    "mimesis",
    "mock",
    "schema",
    "dataframe",
    "populate",
    "testing",
    "pandas",
    "polars",
    "pytest",
    "factory",
    "factory_boy",
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: Implementation :: CPython",
    "Programming Language :: Python :: Implementation :: PyPy",
    "Operating System :: OS Independent",
    "Topic :: Utilities",
    "Topic :: Software Development",
    "Topic :: Software Development :: Testing",
    "License :: OSI Approved :: MIT License",
]
dependencies = []

[project.optional-dependencies]
factory = ["factory-boy>=3.3.0,<4"]

[project.urls]
Homepage = "https://github.com/lk-geimfari/mimesis"
Repository = "https://github.com/lk-geimfari/mimesis"
Documentation = "https://mimesis.name"

[project.entry-points."pytest_randomly.random_seeder"]
mimesis = "mimesis.entrypoints:pytest_randomly_reseed"

[dependency-groups]
dev = [
    "pytest~=7.2",
    "pytest-mock~=3.10",
    "requests~=2.28",
    "mypy~=1.1",
    "colorama>=0.4.6,<0.5",
    "pygments~=2.13",
    "pytest-randomly~=3.12",
    "pytz~=2023.3",
    "black>=22.10,<24.0",
    "autoflake~=2.0",
    "types-pytz~=2023.3",
    "taskipy>=1.10.1,<2",
    "validators>=0.20.0,<0.21",
    "pytest-repeat>=0.9.1,<0.10",
    "coverage>=7.2.3,<8",
    "pytest-cov>=4.0.0,<5",
    "Sphinx>=5.1.1,<8.0.0",
    "sphinx-copybutton>=0.5.0,<0.6",
    "sphinx-autodoc-typehints>=1.19.2,<2",
    "pytest-factoryboy>=2.6.0,<3",
    "isort>=6.0.1",
    "twine>=6.1.0",
]

[tool.hatch.build.targets.sdist]
exclude = ["mimesis/datasets/locale_template"]

[tool.hatch.build.targets.wheel]
exclude = ["mimesis/datasets/locale_template"]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.pytest.ini_options]
testpaths = [
    "mimesis",
    "tests",
    "minifier.py",
]

[tool.mypy]
exclude = ["tests", "docs"]
files = ["mimesis", "minifier.py"]
strict_optional = true
check_untyped_defs = true
ignore_errors = false
ignore_missing_imports = true
warn_no_return = false
warn_unused_ignores = true
warn_redundant_casts = true
warn_unused_configs = true
disallow_any_generics = true
disallow_subclassing_any = true
disallow_untyped_calls = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_return_any = true
strict_equality = true

[tool.isort]
profile = "wemake"

[tool.taskipy.tasks]
minify = "python tasks/minifier.py"

